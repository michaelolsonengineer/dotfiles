
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

export CURRENT_SHELL=$(ps -p $$ | awk '$1 == PP {print $4}' PP=$$)
export DOTFILES=$HOME/.dotfiles

# display how long all tasks over 10 seconds take
export REPORTTIME=10

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
[ -z "$HISTFILE" ] && HISTFILE="$HOME/.bash_history"
HISTSIZE=10000
HISTFILESIZE=50000
SAVEHIST=10000

# Save and reload the history after each command finishes
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

[ -e ~/.terminfo ] && export TERMINFO_DIRS=$HOME/.terminfo:/usr/share/terminfo
[ -z "$TMUX" ] && export TERM=xterm-256color-italic

export EDITOR='vim'
export GIT_EDITOR='vim'

# define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
if [ -d $HOME/code ]; then
    export CODE_DIR=$HOME/code
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f $HOME/.bash_aliases ]; then
    source $HOME/.bash_aliases
fi

# source all common shell scripts inside of the common/ directory
for config in $(ls $DOTFILES/common/*.sh); do
    source $config
done

# source all .bash files inside of the bash/ directory
for config in $(ls $DOTFILES/**/*.bash); do
    source $config
done

if [ -e $HOME/.privaterc ]; then
    source $HOME/.privaterc
fi

if [ -e $HOME/.personalrc ]; then
    source $HOME/.personalrc
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    source /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
  fi
fi

#---------------------
# User configuration:
#---------------------

export SVN_DIFFTOOL=meld
export TERM_BOLD=$(tput smso)
export TERM_RESET=$(tput rmso)
export NUMBER_OF_CORES=$(/usr/bin/nproc || grep -c ^processor /proc/cpuinfo || echo "1")
export HALF_NUMBER_OF_CORES=$(printf "%1.f" "$(($NUMBER_OF_CORES/2))")

# You may need to manually set your language environment
# export LANG=en_US
# export LC_ALL=C
# export LC_CTYPE=en_US.UTF-8

# vim
if [ -f ~/.vim_runtime/install_awesome_vimrc.sh ]; then
    sh ~/.vim_runtime/install_awesome_vimrc.sh >/dev/null
fi

export JAVA_HOME=/usr/lib/jvm/java-8-oracle

export M2_HOME=/usr/share/maven
export M2=$M2_HOME/bin
MAVEN_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE "
MAVEN_OPTS+="-Xmx512M -XX:MaxPermSize=512M "
MAVEN_OPTS+="-Dexternal-config-location=classpath:empty_override.properties "
export MAVEN_OPTS

# Qt environment
export QTVER=qt5
export QT_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins
export QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins/platforms

# NPM environment
# https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md
export NPM_PACKAGES=$HOME/.npm-packages
#export NPM_CONFIG_PREFIX="$HOME/.npm-global"
npm config set prefix "$NPM_PACKAGES"
export NODE_PATH=$NPM_PACKAGES/lib/node_modules:$NODE_PATH

# Unset manpath so we can inherit from /etc/manpath via the `manpath` command
unset MANPATH # delete if you already modified MANPATH elsewhere in your config
export MANPATH="$NPM_PACKAGES/share/man:$(manpath)"

export PATH=$PATH:/usr/sbin
export PATH=$PATH:/sbin
export PATH=$PATH:/usr/local/sbin
export PATH=$PATH:/usr/local/bin/p4v/bin
export PATH=$PATH:$HOME/local/bin
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/scripts
export PATH=$PATH:$HOME/tools
export PATH=$PATH:$HOME/tools/scripts
export PATH=$PATH:$NPM_PACKAGES/bin
export PATH=$PATH:$JAVA_HOME/bin
export PATH=$PATH:$HOME/git/iOS-checkIPA
export PATH=$PATH:/opt/microchip/xc8/v1.33/bin
export PATH=$PATH:/opt/microchip/xc16/v1.22/bin
export PATH=$PATH:/opt/microchip/xc32/v1.33/bin
# export PATH=$PATH:$HOME/current/p4/deckard-65x/developer/trunk/host/linux/x86/usr/bin
# export PATH=$PATH:$HOME/p4/dev/armos/tools/bb10_ramdump/linux
# export PATH=$PATH:$HOME/p4/dev/armos/tools/bb10_ramdump/scripts
# export PATH=$PATH:$HOME/p4/dev/armos/tools/bb10_busydisp
# export PATH=$PATH:$HOME/p4/dev/armos/toolsrc/bb10_ramdump_server
# export PATH=$PATH:$HOME/p4/dev/GK/Scripts/gkh
# export PATH=$PATH:$HOME/p4/dev/GK/Scripts/OSTools
# export PATH=$PATH:/opt/qdt/QDT
# export PATH=$PATH:$QCT_DEV_SCRIPTS
# export PATH=$PATH:$QCT_DEV_SCRIPTS/d65_int
# export PATH=$PATH:/opt/tools/klocwork/bin

export PYTHON_VERSION=2
export ANACONDA_PYTHON_VERSION=$PYTHON_VERSION
export ANACONDA_DIR=/opt/anaconda$ANACONDA_PYTHON_VERSION
# added by Anaconda$ANACONDA_PYTHON_VERSION 5.3.0 installer
# >>> conda init >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$(CONDA_REPORT_ERRORS=false "$ANACONDA_DIR/bin/conda" shell.$CURRENT_SHELL hook 2> /dev/null)"
if [ $? -eq 0 ]; then
    \eval "$__conda_setup"
else
    if [ -f "$ANACONDA_DIR/etc/profile.d/conda.sh" ]; then
        source "$ANACONDA_DIR/etc/profile.d/conda.sh"
        CONDA_CHANGEPS1=false conda activate base
    else
        \export PATH="$ANACONDA_DIR/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda init <<<
